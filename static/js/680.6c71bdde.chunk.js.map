{"version":3,"file":"static/js/680.6c71bdde.chunk.js","mappings":"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","sources":["Page/Plan.tsx"],"sourcesContent":["\r\nimport $ from 'jquery';\r\nimport { useEffect, useState, Dispatch, SetStateAction, memo } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { addDay, removeDay, RootState, DaysType } from '../store/store.ts';\r\nimport { NavigateFunction, useNavigate } from 'react-router-dom';\r\nimport { AppDispatch } from './../index.js';\r\nimport './../style/Plan.css';\r\n\r\n\r\ninterface ClickType {\r\n  [key :string] : string | string[];\r\n}\r\n\r\ninterface InputDaysType {\r\n  setInputDays : Dispatch<SetStateAction<number[]>>, \r\n  dispatch : AppDispatch;\r\n}\r\n\r\ninterface PlanLiType {\r\n  index : number,\r\n  state : DaysType, \r\n  click : (boolean | ClickType)[], \r\n  setClick : Dispatch<SetStateAction<(boolean | ClickType)[]>>, \r\n  delArr : ClickType[], \r\n  setDelArr : Dispatch<SetStateAction<ClickType[]>>, \r\n  navigate : NavigateFunction;\r\n}\r\n\r\n\r\nfunction Plan(){\r\n  let navigate = useNavigate();\r\n  const state = useSelector((state :RootState) => state.days)\r\n  let dispatch = useDispatch<AppDispatch>()\r\n  // console.log(state);\r\n  let [inputDays, setInputDays] = useState<number[]>(Array)\r\n  let [delArr, setDelArr] = useState<ClickType[]>(Array)\r\n  let [click, setClick] = useState<(boolean | ClickType)[]>(Array)\r\n  let [reset, setReset] = useState(false)\r\n\r\n  useEffect(() => {\r\n    inputDays.map((value, i) => {\r\n      if(state[i + 1] == undefined){\r\n        return\r\n      } else if(state[i + 1].length > 4){\r\n        $('.plan-li-category').eq(i).css('grid-template-columns', `repeat(5, 1fr)`);\r\n      } else {\r\n        $('.plan-li-category').eq(i).css('grid-template-columns', `repeat(${state[i + 1].length}, 1fr)`);\r\n      }\r\n    })\r\n  }, [inputDays, state])\r\n\r\n  useEffect(() => {\r\n    if(inputDays.length == 0){\r\n      $('.deleteDay-btn').css('opacity', '0');\r\n      $('.reset-btn').css('opacity', '0');\r\n    } else {\r\n      $('.deleteDay-btn').css('opacity', '1');\r\n      $('.reset-btn').css('opacity', '1');\r\n      $('.days-container').css('display', 'none');\r\n    }\r\n  }, [inputDays])\r\n\r\n  useEffect(() => {\r\n    let copy = [...click];\r\n    let copyObj = {...state};\r\n    for(var key in copyObj){\r\n      copy = [...copy, ...copyObj[key]]\r\n    }\r\n    copy = Array(copy.length).fill(false);\r\n    setClick(copy);\r\n  }, [inputDays, state])\r\n\r\n  useEffect(() => {\r\n    click.map((value, i) => {\r\n      if(value){\r\n        $('.category-unit').eq(i).css('border', '2px solid var(--second-sun-color');\r\n      } else {\r\n        $('.category-unit').eq(i).css('border', 'none');\r\n      }\r\n    });\r\n  }, [click])\r\n\r\n  useEffect(() => {\r\n    $('.category-unit').css('border', 'none');\r\n  }, [reset])\r\n\r\n  return(\r\n    <main className=\"plan-container\">\r\n      <h3>My Plan</h3>\r\n      <div className=\"deleteDay-btn\" onClick={() => {\r\n        dispatch(removeDay(delArr));\r\n        setReset(!reset);\r\n      }}>\r\n        <i className=\"ri-delete-bin-2-fill\"></i>\r\n      </div>\r\n      <div className=\"plan-main-container\">\r\n        <InputDays setInputDays={setInputDays} dispatch={dispatch}/>\r\n\r\n        <ul>\r\n          {\r\n            inputDays.map((value, i) => {\r\n              return(\r\n                <PlanLi key={i} navigate={navigate} delArr={delArr} setDelArr={setDelArr} setClick={setClick} click={click} index={i} state={state} />\r\n              )\r\n            })\r\n          }\r\n        </ul>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\n\r\nfunction InputDays({setInputDays, dispatch} : InputDaysType){\r\n  return (\r\n    <div className=\"days-container\">\r\n      <label htmlFor=\"input-days\">\r\n        The \r\n        <input type=\"number\" id=\"input-days\"></input>\r\n        day trip\r\n      </label>\r\n      <button className=\"confirm-button\" onClick={(e) => {\r\n        if($('#input-days').val() === ''){\r\n          window.alert('input a day plz');\r\n          e.preventDefault();\r\n        } else {\r\n          let inputValue = $('#input-days').val();\r\n          if(typeof inputValue === 'string'){\r\n            inputValue = parseFloat(inputValue);\r\n            setInputDays(Array(inputValue).fill(0));\r\n          } else {\r\n            return\r\n          }\r\n          // inputValue = parseFloat(inputValue);\r\n          // setInputDays(Array(inputValue).fill(0));\r\n\r\n          dispatch(addDay());\r\n          $('.days-container').css('opacity', '0');\r\n          $('.plan-main-container ul').css('opacity', '1');\r\n        }\r\n      }}>Confirm</button>\r\n    </div>        \r\n  )\r\n}\r\n\r\nconst PlanLi = memo( function({index, state, click, setClick, delArr, setDelArr, navigate} : PlanLiType){\r\n  return(\r\n    <li>\r\n      <h4 onClick={function(e){\r\n        let date = $(e.currentTarget).siblings('.plan-li-category').text();\r\n        if(date === '일정이 없습니다'){\r\n          e.preventDefault();\r\n          window.alert('None Schedule');\r\n        } else {\r\n          navigate(`/Plan/${index + 1}`);\r\n        }\r\n      }}>Day {index + 1}</h4>\r\n\r\n      <div className=\"plan-li-category\">\r\n        {\r\n          state[index + 1] == undefined || state[index + 1].length == 0\r\n          ? <span>일정이 없습니다</span> \r\n          : state[index + 1].map((value, i) => {\r\n            return(\r\n              <span className='category-unit' key={i} onClick={(e) => {\r\n                e.stopPropagation();\r\n                let nodes = [...$('.category-unit')]\r\n                let targetIndex = nodes.indexOf(e.currentTarget);\r\n                let copy = [...click];\r\n                copy[targetIndex] = !copy[targetIndex];\r\n                setClick(copy);\r\n\r\n                let copyDel = [...delArr];\r\n                if(copy[targetIndex] == true){\r\n                  copyDel.push(value);\r\n                } else {\r\n                  let findIndex = copyDel.findIndex(element => element == value);\r\n                  copyDel.splice(findIndex, 1); \r\n                }\r\n                setDelArr(copyDel);\r\n              }}>\r\n                {value.locationCategory}\r\n              </span>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n      <i className=\"ri-arrow-down-circle-fill\"></i>\r\n    </li>\r\n  )\r\n} )\r\n\r\n\r\n\r\nexport default Plan"],"names":["InputDays","_ref","setInputDays","dispatch","_jsxs","className","children","htmlFor","_jsx","type","id","onClick","e","$","val","window","alert","preventDefault","inputValue","parseFloat","Array","fill","addDay","css","PlanLi","memo","_ref2","index","state","click","setClick","delArr","setDelArr","navigate","currentTarget","siblings","text","concat","undefined","length","map","value","i","stopPropagation","targetIndex","_toConsumableArray","indexOf","copy","copyDel","push","findIndex","element","splice","locationCategory","useNavigate","useSelector","days","useDispatch","_useState","useState","_useState2","_slicedToArray","inputDays","_useState3","_useState4","_useState5","_useState6","_useState7","_useState8","reset","setReset","useEffect","eq","copyObj","_objectSpread","key","removeDay"],"sourceRoot":""}