{"version":3,"file":"static/js/301.47bffbcb.chunk.js","mappings":"kNAmHA,MAvGA,WACE,IAAAA,GAAiBC,EAAAA,EAAAA,UAAS,CAAC,qBAAO,qBAAO,qBAAO,qBAAO,2BAAQ,qBAAO,qBAAO,qBAAO,eAAM,qBAAO,qBAAO,qBAAO,qBAAO,qBAAO,uBAAtHC,GAA6HC,EAAAA,EAAAA,GAAAH,EAAA,GAAvH,GACbI,GAAqBH,EAAAA,EAAAA,YAAmBI,GAAAF,EAAAA,EAAAA,GAAAC,EAAA,GAAnCE,EAAGD,EAAA,GAAEE,EAAMF,EAAA,GA2BhB,OAzBAG,EAAAA,EAAAA,YAAU,WACR,IAAIC,EAAUC,aAAaD,QAAQ,SACnC,GAAsB,kBAAZA,QACGE,IAARL,EAEI,GAAe,OAAZG,GAA2B,MAAPH,EAAY,CACxC,IAAIM,EAAoB,CAAC,EACzBA,EAAQC,OAAOP,EAAIQ,MAAQ,CAACR,GAC5BI,aAAaK,QAAQ,QAASC,KAAKC,UAAUL,GAC/C,MAAO,GAAe,MAAXH,EAAgB,CACzB,IAAIS,EAAuBF,KAAKG,MAAMV,GAEnCS,EAAWL,OAAOP,EAAIQ,MACvBI,EAAWL,OAAOP,EAAIQ,MAAMM,KAAKd,GAEjCY,EAAWL,OAAOP,EAAIQ,MAAQ,CAACR,GAGjCI,aAAaK,QAAQ,QAASC,KAAKC,UAAUC,GAC/C,CAIJ,GAAG,CAACZ,KAGFe,EAAAA,EAAAA,MAAA,QAAMC,UAAU,qBAAoBC,SAAA,EAClCF,EAAAA,EAAAA,MAAA,MAAAE,SAAA,CAAI,eAAWC,EAAAA,EAAAA,KAAA,SAAK,OAAGA,EAAAA,EAAAA,KAAA,SAAK,aAC5BH,EAAAA,EAAAA,MAAA,OAAKC,UAAU,0BAAyBC,SAAA,EACtCF,EAAAA,EAAAA,MAAA,SAAOI,QAAQ,gBAAeF,SAAA,CAAC,qBAC7BC,EAAAA,EAAAA,KAAA,UAAQE,GAAG,gBAAgBC,aAAc,qBAAMJ,SAE3CrB,EAAO0B,KAAI,SAACC,EAAOC,GACjB,OACEN,EAAAA,EAAAA,KAAA,UAAgBK,MAAOA,EAAMN,SAAEM,GAAlBC,EAEjB,UAINT,EAAAA,EAAAA,MAAA,SAAOI,QAAQ,YAAWF,SAAA,CAAC,cAEzBC,EAAAA,EAAAA,KAAA,SAAOO,KAAK,OAAOL,GAAG,kBAExBL,EAAAA,EAAAA,MAAA,SAAOI,QAAQ,gBAAeF,SAAA,CAAC,kBAE7BC,EAAAA,EAAAA,KAAA,SAAOO,KAAK,OAAOL,GAAG,sBAExBL,EAAAA,EAAAA,MAAA,SAAOI,QAAQ,OAAMF,SAAA,CAAC,uBAEpBC,EAAAA,EAAAA,KAAA,SAAOO,KAAK,SAASL,GAAG,aAE1BF,EAAAA,EAAAA,KAAA,UAAQF,UAAU,kBAAkBU,QAAS,WAC3C,IAAIC,EAAgBC,IAAE,kBAAkBC,MACpCC,EAAYF,IAAE,cAAcC,MAC5BE,EAAgBH,IAAE,kBAAkBC,MACpCG,EAAOJ,IAAE,SAASC,MAIK,kBAAlBF,GACiB,kBAAdG,GACkB,kBAAlBC,GACS,kBAATC,IAEN,KAAKC,KAAKH,IACZI,OAAOC,MAAM,wBAEX,KAAKF,KAAKF,IACZG,OAAOC,MAAM,4BAEX,QAAQF,KAAKD,IACfE,OAAOC,MAAM,kBAIZ,KAAKF,KAAKN,IAAkB,KAAKM,KAAKH,IAAc,KAAKG,KAAKF,IAAkB,QAAQE,KAAKD,KAQ9F/B,EAPa,CACXmC,SAAWT,EACXU,aAAeP,EACfQ,iBAAmBP,EACnBvB,IAAMwB,EACNO,KAAO,CAAC,KAAM,KAAM,KAAM,QAI5BL,OAAOC,MAAM,6BAGnB,EAAElB,SAAC,kBAIX,C","sources":["Page/Register.tsx"],"sourcesContent":["\r\nimport { useEffect, useState } from 'react';\r\nimport $ from 'jquery';\r\nimport { DaysType } from '../store/store';\r\nimport './../style/Register.css'\r\n\r\n\r\ninterface ObjType {\r\n  [key :string] : string | string[];\r\n}\r\n\r\n\r\nfunction Register(){\r\n  const [region] = useState(['Íµ¨Ï¢åÏùç', 'ÎÇ®ÏõêÏùç', 'ÎåÄÏ†ïÏùç', 'ÎßàÎùºÎèÑ', 'ÏÑúÍ∑ÄÌè¨Ïãú', 'ÏÑ±ÏÇ∞Ïùç', 'Ïï†ÏõîÏùç', 'ÏïàÎçïÎ©¥', 'Ïö∞ÎèÑ', 'Ï†úÏ£ºÏãú', 'Ï°∞Ï≤úÏùç', 'ÌëúÏÑ†Î©¥', 'ÌïúÍ≤ΩÎ©¥', 'ÌïúÎùºÏÇ∞', 'ÌïúÎ¶ºÏùç']);\r\n  let [obj, setObj] =  useState<ObjType>();\r\n\r\n  useEffect(() => {\r\n    let getItem = localStorage.getItem('place');\r\n    if(typeof getItem === 'string'){\r\n      if(obj === undefined){\r\n        return\r\n      } else if(getItem === null && obj != null){\r\n        let objData :DaysType = {};\r\n        objData[Number(obj.day)] = [obj];\r\n        localStorage.setItem('place', JSON.stringify(objData));\r\n      } else if (getItem != null){\r\n        let getItemTwo :DaysType = JSON.parse(getItem);\r\n  \r\n        if(getItemTwo[Number(obj.day)]){\r\n          getItemTwo[Number(obj.day)].push(obj);\r\n        } else {\r\n          getItemTwo[Number(obj.day)] = [obj];\r\n        }\r\n  \r\n        localStorage.setItem('place', JSON.stringify(getItemTwo));\r\n      }\r\n    } else {\r\n      return\r\n    }\r\n  }, [obj]);\r\n\r\n  return(\r\n    <main className=\"register-container\">\r\n      <h3>Registering<br/> A <br/> Place</h3>\r\n      <div className=\"register-main-container\">\r\n        <label htmlFor=\"placeLocation\"> Place's Location\r\n          <select id=\"placeLocation\" defaultValue={'Ï†úÏ£ºÏãú'}>\r\n            {\r\n              region.map((value, i) => {\r\n                return(\r\n                  <option key={i} value={value}>{value}</option>\r\n                )\r\n              })\r\n            }\r\n          </select>\r\n        </label>\r\n        <label htmlFor=\"placeName\">\r\n          Place Name\r\n          <input type=\"text\" id=\"placeName\"></input>\r\n        </label>\r\n        <label htmlFor=\"placeCategory\">\r\n          Place Category\r\n          <input type=\"text\" id=\"placeCategory\"></input>\r\n        </label>\r\n        <label htmlFor='days'>\r\n          When are you going?\r\n          <input type='number' id=\"days\"></input>\r\n        </label>\r\n        <button className=\"register-button\" onClick={() => {\r\n          let placeLocation = $('#placeLocation').val();\r\n          let placeName = $('#placeName').val();\r\n          let placeCategory = $('#placeCategory').val();\r\n          let days = $('#days').val();\r\n            \r\n          // inputÍ∞í Í≤ÄÏÇ¨\r\n          if(\r\n            typeof placeLocation === 'string'\r\n            && typeof placeName === 'string'\r\n            && typeof placeCategory === 'string'\r\n            && typeof days === 'string'\r\n          ){\r\n            if(!/\\S/.test(placeName)){\r\n              window.alert(\"input the Place Name\");\r\n            }\r\n            if(!/\\S/.test(placeCategory)){\r\n              window.alert(\"input the Place Category\");\r\n            } \r\n            if(!/[0-9]/.test(days)){\r\n              window.alert(\"input the days\");\r\n            }\r\n\r\n            // LocalStorage\r\n            if(/\\S/.test(placeLocation) && /\\S/.test(placeName) && /\\S/.test(placeCategory) && /[0-9]/.test(days)){\r\n              let newObj = {\r\n                location : placeLocation,\r\n                locationName : placeName,\r\n                locationCategory : placeCategory,\r\n                day : days,\r\n                time : ['00', '00', '00', '00']\r\n              }\r\n              setObj(newObj);\r\n\r\n              window.alert(\"Registered! üòä\")\r\n            }\r\n          }\r\n        }}>Register</button>\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\n\r\nexport default Register"],"names":["_useState","useState","region","_slicedToArray","_useState3","_useState4","obj","setObj","useEffect","getItem","localStorage","undefined","objData","Number","day","setItem","JSON","stringify","getItemTwo","parse","push","_jsxs","className","children","_jsx","htmlFor","id","defaultValue","map","value","i","type","onClick","placeLocation","$","val","placeName","placeCategory","days","test","window","alert","location","locationName","locationCategory","time"],"sourceRoot":""}