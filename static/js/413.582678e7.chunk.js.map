{"version":3,"file":"static/js/413.582678e7.chunk.js","mappings":"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","sources":["Page/Detail.tsx"],"sourcesContent":["import $ from 'jquery';\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useParams } from \"react-router-dom\"\r\nimport { alignLocation, addTime, RootState, DaysType } from '../store/store.ts';\r\nimport { AppDispatch } from '../index.js';\r\nimport './../style/Detail.css';\r\n\r\n\r\ninterface LocationType {\r\n  value : {[key :string] : string | string[]}, \r\n  index : number, \r\n  state : DaysType, \r\n  id : number, \r\n  dispatch : AppDispatch;\r\n}\r\n\r\n\r\nfunction Detail(){\r\n  let {id} = useParams();\r\n  let state = useSelector((state :RootState) => state.days);\r\n  let dispatch = useDispatch<AppDispatch>();\r\n\r\n  return(\r\n    <main className=\"detail-container\">\r\n      <h3>Day {id}</h3>\r\n      <button className=\"detail-saveBtn\" onClick={() => {\r\n        let timeNodes = [...$('.detail-location-time')];\r\n        let nodes = [...$('select')];\r\n\r\n        let timeArr :string[][] = [];\r\n\r\n        timeNodes.map((value, i) => {\r\n          let timeTable :string[] = [];\r\n          nodes.map((element, k) => {\r\n            if(k >= i * 4 && k < (i + 1) * 4){\r\n              let select = $('select').eq(k).val();\r\n              if(typeof select === 'string'){\r\n                timeTable.push(select);\r\n              }\r\n              // timeTable.push($('select').eq(k).val())\r\n            } else {\r\n              return\r\n            }\r\n          });\r\n          timeArr.push(timeTable);\r\n        });\r\n\r\n        console.log(timeArr);\r\n\r\n        dispatch(addTime([Number(id), timeArr]));\r\n        window.alert('Save!');\r\n        // dispatch(redefined([id, timeArr, state.days]));\r\n      }}>SAVE</button>\r\n      <div className=\"detail-schedule-container\">\r\n        {\r\n          state[Number(id)].map((value, i) => {\r\n            return(\r\n              <Location key={i} dispatch={dispatch} id={Number(id)} state={state} value={value} index={i}></Location>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\n\r\n// Save 누르면 dispatch해서 store에서 데이터 관리\r\n\r\nfunction Location({value, index, state, id, dispatch} : LocationType){\r\n  let hourArr = new Array(24).fill(0);\r\n  let minuteArr = new Array(12).fill(0);\r\n\r\n  return(\r\n    <div className=\"detail-location-container\">\r\n      <div className=\"detail-location-time\">\r\n        <select name=\"hour\" defaultValue={\r\n          state[id][index].time !== undefined\r\n          ? state[id][index].time[0]\r\n          : ''\r\n        }>\r\n          {\r\n            hourArr.map((value, i) => {\r\n              let num :string;\r\n              if(i < 10){\r\n                num = `0${i}`;\r\n              } else {\r\n                num = `${i}`;\r\n              }\r\n\r\n              return(\r\n                <option key={i} value={num}>{num}</option>\r\n              )\r\n            })\r\n          }\r\n        </select>\r\n        <span>:</span>\r\n        <select name=\"minute\" defaultValue={\r\n          state[id][index].time !== undefined\r\n          ? state[id][index].time[1]\r\n          : ''\r\n        }>\r\n          {\r\n            minuteArr.map((value, i) => {\r\n              let num = i * 5;\r\n              let str :string;\r\n              if(num < 10){\r\n                str = `0${num}`;\r\n                return(\r\n                  <option key={i} value={str}>{str}</option>\r\n                )\r\n              } else {\r\n                return(\r\n                  <option key={i} value={num}>{num}</option>\r\n                )\r\n              }\r\n            })\r\n          }\r\n        </select>\r\n        <span>To</span>\r\n        <select name=\"hour\" defaultValue={\r\n          state[id][index].time !== undefined\r\n          ? state[id][index].time[2]\r\n          : ''\r\n        }>\r\n          {\r\n            hourArr.map((value, i) => {\r\n              let num :string;\r\n              if(i < 10){\r\n                num = `0${i}`;\r\n              } else {\r\n                num = `${i}`;\r\n              }\r\n\r\n              return(\r\n                <option key={i} value={num}>{num}</option>\r\n              )\r\n            })\r\n          }\r\n        </select>\r\n        <span>:</span>\r\n        <select name=\"minute\" defaultValue={\r\n          state[id][index].time !== undefined\r\n          ? state[id][index].time[3]\r\n          : ''\r\n        }>\r\n          {\r\n            minuteArr.map((value, i) => {\r\n              let num = i * 5;\r\n              let str :string;\r\n              if(num < 10){\r\n                str = `0${num}`;\r\n                return(\r\n                  <option key={i} value={str}>{str}</option>\r\n                )\r\n              } else {\r\n                return(\r\n                  <option key={i} value={num}>{num}</option>\r\n                )\r\n              }\r\n            })\r\n          }\r\n        </select>\r\n      </div>\r\n      <div className=\"detail-location\">\r\n        <div><i className=\"ri-flag-fill\"></i></div>\r\n        <ul>\r\n          <li>{value.location}</li>\r\n          <li>{value.locationName}</li>\r\n          <li>{value.locationCategory}</li>\r\n        </ul>\r\n        <div className='detail-updown-btn'>\r\n          <button className='detail-up-btn' onClick={() => {\r\n            let length = state[id].length - 1\r\n            if(state[id][index - 1] === undefined){\r\n              // [id, value, state[id][length]]\r\n              dispatch(alignLocation([id, value, state[id][length]]))\r\n            } else {\r\n              // [id, value, state[id][index - 1]]\r\n              dispatch(alignLocation([id, value, state[id][index - 1]]))\r\n            }\r\n          }}><i className=\"ri-arrow-up-s-line\"></i></button>\r\n\r\n          <button className='detail-down-btn' onClick={() => {\r\n            if(state[id][index + 1] === undefined){\r\n              dispatch(alignLocation([id, value, state[id][0]]))\r\n            } else {\r\n              dispatch(alignLocation([id, value, state[id][index + 1]]))\r\n            }\r\n          }}><i className=\"ri-arrow-down-s-line\"></i></button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\nexport default Detail"],"names":["Location","_ref","value","index","state","id","dispatch","hourArr","Array","fill","minuteArr","_jsxs","className","children","_jsx","name","defaultValue","undefined","time","map","i","num","concat","str","location","locationName","locationCategory","onClick","length","alignLocation","useParams","useSelector","days","useDispatch","timeNodes","_toConsumableArray","$","nodes","timeArr","timeTable","element","k","select","eq","val","push","console","log","addTime","Number","window","alert"],"sourceRoot":""}