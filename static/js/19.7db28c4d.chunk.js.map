{"version":3,"file":"static/js/19.7db28c4d.chunk.js","mappings":"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","sources":["Page/Map.tsx"],"sourcesContent":["import $ from 'jquery';\r\nimport { useEffect, useState } from \"react\"\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { setting, DaysType, RootState } from './../store/store.ts';\r\nimport { AppDispatch } from '../index.js';\r\nimport './../style/Map.css';\r\n\r\n\r\ninterface LocationInfoType {\r\n  [key :string] : string | string[];\r\n}\r\n\r\n\r\nfunction Map(){\r\n  let state = useSelector((state :RootState) => state);\r\n  let dispatch = useDispatch<AppDispatch>();\r\n  let [theDay, setTheDay] = useState<LocationInfoType[]>();\r\n  let [infoArr, setInfoArr] = useState<LocationInfoType[]>();\r\n  let [falsy, setFalsy] = useState<boolean>(true);\r\n\r\n  useEffect(() => {\r\n    let getItem = localStorage.getItem('place');\r\n\r\n    if(typeof getItem === 'string'){\r\n      let getItemTwo : DaysType = JSON.parse(getItem);\r\n      dispatch(setting(getItemTwo));\r\n    } else {\r\n      return\r\n    }\r\n  }, [])\r\n\r\n  useEffect(() => {\r\n    if(theDay !== undefined){\r\n      theDay.map((value, i) => {\r\n        let findValue = state.flag.find(element => element.name === value.location);\r\n\r\n        if(findValue !== undefined){\r\n          $('.map-flag').eq(i).css('top', `${findValue.top}%`);\r\n          $('.map-flag').eq(i).css('left', `${findValue.left}%`);\r\n        } else {\r\n          return\r\n        }\r\n      })\r\n    } else {\r\n      return\r\n    }\r\n  }, [theDay])\r\n\r\n  useEffect(() => {\r\n    window.scrollTo({\r\n      top: 150,\r\n      left: 0,\r\n      behavior: \"smooth\"\r\n    });\r\n  },[infoArr])\r\n\r\n  return (\r\n    <main className=\"map-container\">\r\n      <h3>Map</h3>\r\n      <div className='map-input-container'>\r\n        <label htmlFor='input-schedule'>\r\n          Day\r\n          <input type=\"number\" id='input-schedule'></input>\r\n        </label>\r\n        <button className='map-search-btn' aria-label='search' onClick={(e) => {\r\n          if(state.days === null){\r\n            window.alert('No registered shedules.');\r\n            e.preventDefault();\r\n          } else if(state.days[Number($('#input-schedule').val())] === undefined){\r\n            setFalsy(false);\r\n            setInfoArr(undefined);\r\n            window.alert('No registered shedules.');\r\n          } else {\r\n            setTheDay(state.days[Number($('#input-schedule').val())]);\r\n            setFalsy(true);\r\n            setInfoArr(undefined);\r\n          }\r\n        }}>\r\n          <i className=\"ri-search-2-fill\"></i>\r\n        </button>\r\n      </div>\r\n      <div className=\"map-main-container\">\r\n        <div className='map-bg'>\r\n          {\r\n            theDay === undefined || falsy === false\r\n            ? null\r\n            : theDay.map((value, i) => {\r\n              return(\r\n                <span className=\"map-flag\" key={i} onClick={() => {\r\n                  let arr :LocationInfoType[] = [];\r\n                  arr.push(value);\r\n                  setInfoArr(arr);\r\n                }}>\r\n                  <i className=\"ri-flag-fill\"></i>\r\n                </span>\r\n              )\r\n            })\r\n          }\r\n        </div>\r\n      </div>\r\n      <div className='map-info-container'>\r\n        {\r\n          infoArr === undefined\r\n          ? null\r\n          : infoArr.map((value ,i) => {\r\n            return(\r\n              <div className='flag-info' key={i}>\r\n                <h4>\r\n                  <i className=\"ri-map-pin-fill\"></i>\r\n                  {value.locationName}\r\n                </h4>\r\n                <ul className='info-ul'>\r\n                  <li>{`${value.time[0]} : ${value.time[1]} ~ ${value.time[2]} : ${value.time[3]}`}</li>\r\n                  <li>{value.location}</li>\r\n                  <li>{value.locationCategory}</li>\r\n                  <li>Day {value.day}</li>\r\n                </ul>\r\n              </div>\r\n            )\r\n          })\r\n        }\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\n\r\nexport default Map"],"names":["state","useSelector","dispatch","useDispatch","_useState","useState","_useState2","_slicedToArray","theDay","setTheDay","_useState3","_useState4","infoArr","setInfoArr","_useState5","_useState6","falsy","setFalsy","useEffect","getItem","localStorage","getItemTwo","JSON","parse","setting","undefined","map","value","i","findValue","flag","find","element","name","location","$","eq","css","concat","top","left","window","scrollTo","behavior","_jsxs","className","children","_jsx","htmlFor","type","id","onClick","e","days","alert","preventDefault","Number","val","arr","push","locationName","time","locationCategory","day"],"sourceRoot":""}